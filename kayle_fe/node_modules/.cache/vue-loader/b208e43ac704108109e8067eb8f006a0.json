{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shenxh/Desktop/qa_auto_test/src/views/interface/transcribe.vue?vue&type=template&id=6f65da25&scoped=true&","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/views/interface/transcribe.vue","mtime":1608531417193},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}