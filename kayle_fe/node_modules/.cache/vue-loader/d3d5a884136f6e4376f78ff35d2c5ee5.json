{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantotalinter.vue?vue&type=style&index=0&id=a55cf516&scoped=true&lang=css&","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantotalinter.vue","mtime":1609938243586},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhpZ2hsaWdodCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMTkyLCAxMDUpOwogIHBhZGRpbmc6IDBweDsKfQo="},{"version":3,"sources":["plantotalinter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgMA;AACA;AACA;AACA","file":"plantotalinter.vue","sourceRoot":"src/components/testplan","sourcesContent":["<template>\n  <a-table :data-source=\"data\" :columns=\"columns\" bordered :scroll=\"{ x: 100, y: 300 }\">\n    <div\n      slot=\"filterDropdown\"\n      slot-scope=\"{ setSelectedKeys, selectedKeys, confirm, clearFilters, column }\"\n      style=\"padding: 8px\"\n    >\n      <a-input\n        v-ant-ref=\"c => (searchInput = c)\"\n        :placeholder=\"`Search ${column.dataIndex}`\"\n        :value=\"selectedKeys[0]\"\n        style=\"width: 188px; margin-bottom: 8px; display: block;\"\n        @change=\"e => setSelectedKeys(e.target.value ? [e.target.value] : [])\"\n        @pressEnter=\"() => handleSearch(selectedKeys, confirm, column.dataIndex)\"\n      />\n      <a-button\n        type=\"primary\"\n        icon=\"search\"\n        size=\"small\"\n        style=\"width: 90px; margin-right: 8px\"\n        @click=\"() => handleSearch(selectedKeys, confirm, column.dataIndex)\"\n      >\n        搜索\n      </a-button>\n      <a-button size=\"small\" style=\"width: 90px\" @click=\"() => handleReset(clearFilters)\">\n        重置\n      </a-button>\n    </div>\n    <a-icon\n      slot=\"filterIcon\"\n      slot-scope=\"filtered\"\n      type=\"search\"\n      :style=\"{ color: filtered ? '#108ee9' : undefined }\"\n    />\n    <!-- <template slot=\"customRender\" slot-scope=\"text, record, index, column\">\n      <span v-if=\"searchText && searchedColumn === column.dataIndex\">\n        <template\n          v-for=\"(fragment, i) in text\n            .toString()\n            .split(new RegExp(`(?<=${searchText})|(?=${searchText})`, 'i'))\"\n        >\n          <mark\n            v-if=\"fragment.toLowerCase() === searchText.toLowerCase()\"\n            :key=\"i\"\n            class=\"highlight\"\n            >{{ fragment }}</mark\n          >\n          <template v-else>{{ fragment }}</template>\n        </template>\n      </span>\n      <template v-else>\n        {{ text }}\n      </template>\n    </template> -->\n  </a-table>\n</template>\n\n<script>\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Joe Black',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Jim Green',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n  {\n    key: '5',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n  {\n    key: '6',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n  {\n    key: '7',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n  {\n    key: '8',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n  {\n    key: '9',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n  {\n    key: '10',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n  {\n    key: '11',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n  {\n    key: '12',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n];\n\nexport default {\n  data() {\n    return {\n      data,\n      searchText: '',\n      searchInput: null,\n      searchedColumn: '',\n      columns: [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          scopedSlots: {\n            filterDropdown: 'filterDropdown',\n            filterIcon: 'filterIcon',\n            customRender: 'customRender',\n          },\n          onFilter: (value, record) =>\n            record.name\n              .toString()\n              .toLowerCase()\n              .includes(value.toLowerCase()),\n          onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n              setTimeout(() => {\n                this.searchInput.focus();\n              }, 0);\n            }\n          },\n        },\n        {\n          title: 'Age',\n          dataIndex: 'age',\n          key: 'age',\n        },\n        {\n          title: 'Address',\n          dataIndex: 'address',\n          key: 'address',\n          \n        },\n      ],\n    };\n  },\n  methods: {\n    handleSearch(selectedKeys, confirm, dataIndex) {\n      confirm();\n      this.searchText = selectedKeys[0];\n      this.searchedColumn = dataIndex;\n    },\n\n    handleReset(clearFilters) {\n      clearFilters();\n      this.searchText = '';\n    },\n  },\n};\n</script>\n<style scoped>\n.highlight {\n  background-color: rgb(255, 192, 105);\n  padding: 0px;\n}\n</style>\n"]}]}