{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantable.vue","mtime":1611912960093},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByZXF1ZXN0IGZyb20gIkAvdXRpbHMvcmVxdWVzdCI7CmltcG9ydCB7IGdldEJ1c2luZXNzQ29sb3IgfSBmcm9tICJAL3V0aWxzL2NvbW1vbmNvbmZpZyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFtdLAogICAgICBxdWVyeXBsYW5jb3JlOiAiL2FwaS9wbGFuL3F1ZXJ5cGxhbmNvcmU/IiwKICAgICAgcGFnZWlkOiAxLAogICAgICBjb3JlQ29sdW1uczogW10sCiAgICAgIHVuRG9uZUNvbHVtbnM6IFtdLAogICAgICBwYWdpbmF0aW9uOiB7CiAgICAgICAgdG90YWw6IDEwCiAgICAgIH0sCiAgICAgIGlzU3Bpbm5pbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgcHJvcHM6IFsiY29sdW1ucyIsICJ0YWJUeXBlIiwgInVzZXJzZWFyY2giXSwKCiAgd2F0Y2g6IHsKICAgIC8vIOebkeWQrHRhYlR5cGXlj5jljJbvvIzlpoLmnpzmnInlj5jljJbliJnph43mlrDor7fmsYIKICAgIHRhYlR5cGUodmFsLCBvbGRWYWwpIHsKICAgICAgY29uc29sZS5sb2codmFsKTsKICAgICAgY29uc29sZS5sb2cob2xkVmFsKTsKICAgICAgaWYgKHZhbCAhPT0gb2xkVmFsKSB7CiAgICAgICAgdGhpcy5wYWdlaWQgPSAxOwogICAgICAgIGNvbnNvbGUubG9nKCJ0YWJUeXBlIik7CiAgICAgICAgdGhpcy5iYXNlUmVxdWVzdEZ1bmModGhpcy5wYWdlaWQpOwogICAgICB9CiAgICB9LAogICAgdXNlcnNlYXJjaCgpIHsKICAgICAgdGhpcy5iYXNlVXNlcnNlYXJjaCA9IHRoaXMudXNlcnNlYXJjaDsKICAgICAgdGhpcy5wYWdlaWQgPSAxOwogICAgICB0aGlzLmJhc2VSZXF1ZXN0RnVuYyh0aGlzLnBhZ2VpZCk7CiAgICB9CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKHRoaXMuY29sdW1ucyk7CiAgICBjb25zb2xlLmxvZyh0aGlzLnRhYlR5cGUpOwogICAgdGhpcy5pc1NwaW5uaW5nID0gdHJ1ZTsKICAgIGlmICh0aGlzLnRhYlR5cGUgPT09ICJjb3JlRGF0YSIpIHsKICAgICAgdGhpcy5jb3JlQ29sdW1ucy5wdXNoKHsKICAgICAgICB0aXRsZTogIuWMuemFjeS/oeaBryjns7vnu5/jgIHniYjmnKzjgIHmnLrlnospIiwKICAgICAgICBkYXRhSW5kZXg6ICJtYXRjaF9pbmZvbWF0aW9uIiwKICAgICAgICBrZXk6ICJtYXRjaF9pbmZvbWF0aW9uIiwKICAgICAgICBzY29wZWRTbG90czogeyBjdXN0b21SZW5kZXI6ICJpbWF0Y2gtaW5mb21hdGlvbiIgfSwKICAgICAgICB3aWR0aDogMzAwCiAgICAgIH0pOwogICAgICB0aGlzLmNvcmVDb2x1bW5zLnB1c2goewogICAgICAgIHRpdGxlOiAi5piv5ZCm5a6M5oiQIiwKICAgICAgICBkYXRhSW5kZXg6ICJpc19maW5pc2hlZCIsCiAgICAgICAga2V5OiAiaXNfZmluaXNoZWQiLAogICAgICAgIHdpZHRoOiAxMDAsCiAgICAgICAgLy8gZml4ZWQ6ICJyaWdodCIsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAiaXMtZmluaXNoZWQiIH0KICAgICAgfSk7CiAgICAgIHRoaXMuY29yZUNvbHVtbnMgPSBbLi4udGhpcy5jb2x1bW5zLCAuLi50aGlzLmNvcmVDb2x1bW5zXTsKICAgICAgY29uc29sZS5sb2codGhpcy5jb3JlQ29sdW1ucyk7CiAgICB9IGVsc2UgaWYgKHRoaXMudGFiVHlwZSA9PT0gInVuRG9uZUNvcmUiKSB7CiAgICAgIHRoaXMudW5Eb25lQ29sdW1ucyA9IHRoaXMuY29sdW1uczsKICAgIH0KICAgIHRoaXMuYmFzZVJlcXVlc3RGdW5jKHRoaXMucGFnZWlkKTsKICAgIHRoaXMuaXNTcGlubmluZyA9IGZhbHNlOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UXVlcnlQbGFuQ29yZVVSTChwYWdlSWQpIHsKICAgICAgdmFyIGJhc2VRdWVyeVVybCA9CiAgICAgICAgdGhpcy5xdWVyeXBsYW5jb3JlICsgInRhYnR5cGU9IiArIHRoaXMudGFiVHlwZSArICImcGFnZWlkPSIgKyBwYWdlSWQ7CiAgICAgIGlmICh0aGlzLmJhc2VVc2Vyc2VhcmNoKSB7CiAgICAgICAgYmFzZVF1ZXJ5VXJsID0gYmFzZVF1ZXJ5VXJsICsgIiZ1c2Vyc2VhcmNoPSIgKyB0aGlzLmJhc2VVc2Vyc2VhcmNoOwogICAgICB9CiAgICAgIHJldHVybiBiYXNlUXVlcnlVcmw7CiAgICB9LAogICAgYmFzZVJlcXVlc3RGdW5jKHBhZ2VpZCkgewogICAgICByZXF1ZXN0KHsKICAgICAgICB1cmw6IHRoaXMuZ2V0UXVlcnlQbGFuQ29yZVVSTChwYWdlaWQpLAogICAgICAgIG1ldGhvZDogIkdFVCIKICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAzMzAwMDAgfHwgcmVzLmRhdGEuY29kZSA9PT0gMzMwMDA2KSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YS5kYXRhLmRhdGEpOwogICAgICAgICAgY29uc29sZS5sb2coImhhaGEiKTsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEudG90YWxQYWdlcyk7CiAgICAgICAgICB0aGlzLmRhdGEgPSByZXMuZGF0YS5kYXRhLmRhdGE7CiAgICAgICAgICB0aGlzLnBhZ2luYXRpb24udG90YWwgPSByZXMuZGF0YS5kYXRhLnRvdGFsUGFnZXMgKiAxMDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5kYXRhID0gW107CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvKioKICAgICAqIGNoYW5nZVBhZ2U6IOW9k+WIhumhteWPmOWMluaXtu+8jOinpuWPkeeahOaWueazlQogICAgICogZS5jdXJyZW50OiDlvZPliY3pobXnmoRwYWdlaWQKICAgICAqIGUudG90YWw6IOS4gOWFseWkmuWwkeadoeaVsOaNrgogICAgICogZS5wYWdlU2l6ZTog5q+P6aG15pyJ5aSa5bCR5p2h5pWw5o2uCiAgICAgKi8KICAgIGNoYW5nZVBhZ2UoZSkgewogICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgdGhpcy5iYXNlUmVxdWVzdEZ1bmMoZS5jdXJyZW50KTsKICAgIH0sCgogICAgcmV0dXJuQnVzQ29sb3IocmVjb3JkKSB7CiAgICAgIHJldHVybiBnZXRCdXNpbmVzc0NvbG9yKHJlY29yZC5jb250ZW50KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["plantable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"plantable.vue","sourceRoot":"src/components/testplan","sourcesContent":["<template>\n  <div>\n    <a-spin :spinning=\"isSpinning\" tip=\"Loading...\">\n      <a-table\n        :columns=\"tabType === 'coreData' ? coreColumns : unDoneColumns\"\n        :data-source=\"data\"\n        :pagination=\"pagination\"\n        :scroll=\"{ y: 500, x: 1500 }\"\n        @change=\"changePage\"\n        bordered\n      >\n        <div slot=\"belongBusiness\" slot-scope=\"text, record\">\n          <a-tag :color=\"returnBusColor(record)\">\n            {{ record.content }}\n          </a-tag>\n        </div>\n\n        <div slot=\"interface_regular\" slot-scope=\"text, record\">\n          <div>\n            {{ record.interface_regular }}\n          </div>\n        </div>\n\n        <div slot=\"imatch-infomation\" slot-scope=\"text, record\">\n          <div\n            v-for=\"(matchDict, index) in record.match_infomation\"\n            :key=\"index\"\n          >\n            <a-avatar shape=\"square\" icon=\"snippets\" size=\"small\" />\n            <a-tag color=\"pink\" style=\"margin-left:10px\">\n              {{ matchDict.inter_os }}\n            </a-tag>\n            <a-tag color=\"red\">\n              {{ matchDict.inter_release }}\n            </a-tag>\n            <a-tag color=\"orange\">\n              {{ matchDict.inter_brand }}\n            </a-tag>\n          </div>\n        </div>\n\n        <div slot=\"is-finished\" slot-scope=\"text, record\">\n          <a-icon\n            :type=\"record.is_finished ? 'check-circle' : 'close-circle'\"\n            theme=\"twoTone\"\n            style=\"font-size: 24px;margin-left:15px\"\n            :two-tone-color=\"record.is_finished ? 'green' : 'red'\"\n          ></a-icon>\n        </div>\n      </a-table>\n    </a-spin>\n  </div>\n</template>\n<script>\nimport request from \"@/utils/request\";\nimport { getBusinessColor } from \"@/utils/commonconfig\";\n\nexport default {\n  data() {\n    return {\n      data: [],\n      queryplancore: \"/api/plan/queryplancore?\",\n      pageid: 1,\n      coreColumns: [],\n      unDoneColumns: [],\n      pagination: {\n        total: 10\n      },\n      isSpinning: false\n    };\n  },\n  props: [\"columns\", \"tabType\", \"usersearch\"],\n\n  watch: {\n    // 监听tabType变化，如果有变化则重新请求\n    tabType(val, oldVal) {\n      console.log(val);\n      console.log(oldVal);\n      if (val !== oldVal) {\n        this.pageid = 1;\n        console.log(\"tabType\");\n        this.baseRequestFunc(this.pageid);\n      }\n    },\n    usersearch() {\n      this.baseUsersearch = this.usersearch;\n      this.pageid = 1;\n      this.baseRequestFunc(this.pageid);\n    }\n  },\n\n  created() {\n    console.log(this.columns);\n    console.log(this.tabType);\n    this.isSpinning = true;\n    if (this.tabType === \"coreData\") {\n      this.coreColumns.push({\n        title: \"匹配信息(系统、版本、机型)\",\n        dataIndex: \"match_infomation\",\n        key: \"match_infomation\",\n        scopedSlots: { customRender: \"imatch-infomation\" },\n        width: 300\n      });\n      this.coreColumns.push({\n        title: \"是否完成\",\n        dataIndex: \"is_finished\",\n        key: \"is_finished\",\n        width: 100,\n        // fixed: \"right\",\n        scopedSlots: { customRender: \"is-finished\" }\n      });\n      this.coreColumns = [...this.columns, ...this.coreColumns];\n      console.log(this.coreColumns);\n    } else if (this.tabType === \"unDoneCore\") {\n      this.unDoneColumns = this.columns;\n    }\n    this.baseRequestFunc(this.pageid);\n    this.isSpinning = false;\n  },\n  methods: {\n    getQueryPlanCoreURL(pageId) {\n      var baseQueryUrl =\n        this.queryplancore + \"tabtype=\" + this.tabType + \"&pageid=\" + pageId;\n      if (this.baseUsersearch) {\n        baseQueryUrl = baseQueryUrl + \"&usersearch=\" + this.baseUsersearch;\n      }\n      return baseQueryUrl;\n    },\n    baseRequestFunc(pageid) {\n      request({\n        url: this.getQueryPlanCoreURL(pageid),\n        method: \"GET\"\n      }).then(res => {\n        if (res.data.code === 330000 || res.data.code === 330006) {\n          console.log(res.data.data.data);\n          console.log(\"haha\");\n          console.log(res.data.data.totalPages);\n          this.data = res.data.data.data;\n          this.pagination.total = res.data.data.totalPages * 10;\n        } else {\n          this.data = [];\n        }\n      });\n    },\n    /**\n     * changePage: 当分页变化时，触发的方法\n     * e.current: 当前页的pageid\n     * e.total: 一共多少条数据\n     * e.pageSize: 每页有多少条数据\n     */\n    changePage(e) {\n      console.log(e);\n      this.baseRequestFunc(e.current);\n    },\n\n    returnBusColor(record) {\n      return getBusinessColor(record.content);\n    }\n  }\n};\n</script>\n"]}]}