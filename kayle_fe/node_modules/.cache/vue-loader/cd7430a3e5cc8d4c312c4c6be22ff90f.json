{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shenxh/Desktop/qa_auto_test/src/views/interface/intermodule.vue?vue&type=style&index=0&id=22ad6b58&scoped=true&lang=css&","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/views/interface/intermodule.vue","mtime":1610416753650},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYW50LWFkdmFuY2VkLXNlYXJjaC1mb3JtIC5hbnQtZm9ybS1pdGVtIHsKICBkaXNwbGF5OiBmbGV4Owp9Cg=="},{"version":3,"sources":["intermodule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8SA;AACA;AACA","file":"intermodule.vue","sourceRoot":"src/views/interface","sourcesContent":["<template>\n  <div>\n    <a-page-header\n      title=\"核心接口\"\n      sub-title=\"所有用户上传的接口列表\"\n      :avatar=\"{ props: routes }\"\n    >\n    </a-page-header>\n\n    <a-form\n      class=\"ant-advanced-search-form\"\n      :form=\"form\"\n      style=\"margin-left:20px\"\n    >\n      <a-row :gutter=\"24\">\n        <a-col :span=\"8\">\n          <a-form-item label=\"URL查询\">\n            <a-input\n              placeholder=\"输入要接口URL信息\"\n              v-decorator=\"[`urlcontent`]\"\n            ></a-input>\n          </a-form-item>\n        </a-col>\n        <a-col :span=\"12\">\n          <a-form-item label=\"所属业务\">\n            <a-select\n              style=\"width: 180px\"\n              v-decorator=\"['belongBusiness']\"\n              placeholder=\"选择接口所属业务\"\n            >\n              <a-select-option value=\"Content\">\n                内容&会员\n              </a-select-option>\n              <a-select-option value=\"Other\">\n                其他\n              </a-select-option>\n            </a-select>\n          </a-form-item>\n        </a-col>\n        <a-col :span=\"4\" :style=\"{ textAlign: 'right' }\">\n          <a-button type=\"primary\" @click=\"handleSearch\">\n            搜索\n          </a-button>\n          <a-button :style=\"{ marginLeft: '8px' }\" @click=\"handleReset\">\n            清空\n          </a-button>\n        </a-col>\n      </a-row>\n    </a-form>\n\n    <a-table\n      :columns=\"columns\"\n      :data-source=\"data\"\n      :scroll=\"{ x: 1500, y: 600 }\"\n      :pagination=\"pagination\"\n      @change=\"changePage\"\n      bordered\n    >\n      <div slot=\"belongBusiness\" slot-scope=\"text, record\">\n        <a-tag :color=\"record.content === 'Content' ? 'volcano' : 'green'\">\n          {{ record.content }}\n        </a-tag>\n      </div>\n\n      <div slot=\"action\" slot-scope=\"text, record\">\n        <a @click=\"clickEdit(record)\"><a-icon type=\"edit\"></a-icon> 编辑</a>\n        <br />\n        <a @click=\"showDeleteConfirm(record)\"\n          ><a-icon type=\"delete\"></a-icon> 删除</a\n        >\n      </div>\n    </a-table>\n\n    <editmodal\n      :visible=\"editVisible\"\n      :nowColumns=\"selectCoreData\"\n      @changeShowEditModol=\"changeEdits\"\n    ></editmodal>\n  </div>\n</template>\n<script>\nimport request from \"@/utils/request\";\nimport { message, Modal } from \"ant-design-vue\";\nimport editmodal from \"@/components/modulelist/editmodal\";\n\nconst columns = [\n  {\n    title: \"接口path\",\n    width: 300,\n    dataIndex: \"interfacePath\",\n    key: \"interfacePath\",\n    scopedSlots: { customRender: \"interface-path\" }\n  },\n  {\n    title: \"请求方式\",\n    width: 80,\n    dataIndex: \"requestMethod\",\n    key: \"requestMethod\"\n  },\n  {\n    title: \"接口ID\",\n    dataIndex: \"interfaceId\",\n    key: \"interfaceId\",\n    width: 150,\n    scopedSlots: { customRender: \"request-data\" }\n  },\n  {\n    title: \"负责人\",\n    dataIndex: \"userName\",\n    key: \"userName\",\n    width: 100,\n    scopedSlots: { customRender: \"user-name\" }\n  },\n  {\n    title: \"所属业务\",\n    dataIndex: \"content\",\n    key: \"content\",\n    width: 100,\n    scopedSlots: { customRender: \"belongBusiness\" }\n  },\n  {\n    title: \"接口正则\",\n    dataIndex: \"interfaceRegular\",\n    key: \"interfaceRegular\",\n    width: 300\n  },\n  { title: \"接口描述\", dataIndex: \"interfaceDesc\", key: \"interfaceDesc\" },\n  {\n    title: \"更多操作\",\n    key: \"operation\",\n    fixed: \"right\",\n    width: 100,\n    scopedSlots: { customRender: \"action\" }\n  }\n];\n\nexport default {\n  data() {\n    return {\n      data: [],\n      columns: columns,\n      coreInterUrl: \"/api/tempinter/getcoreinter?pageid=1\",\n      deleteCoreUrl: \"/api/tempinter/deletecore\",\n      pagination: {\n        total: 10\n      },\n      form: this.$form.createForm(this, { name: \"advanced_search\" }),\n      editVisible: false,\n      selectCoreData: {},\n      routes: {\n        icon: \"api\",\n        size: \"large\",\n        style: \"color: #f56a00; backgroundColor: red\"\n      }\n    };\n  },\n  created() {\n    request({\n      url: this.coreInterUrl,\n      method: \"GET\"\n    }).then(res => {\n      if (res.data.code === 230003) {\n        console.log(res.data.data.data);\n        this.data = res.data.data.data;\n        this.pagination.total = res.data.data.totolPage * 10;\n      }\n    });\n  },\n  components: {\n    editmodal\n  },\n\n  methods: {\n    /**\n     * changePage: 当分页变化时，触发的方法\n     * e.current: 当前页的pageid\n     * e.total: 一共多少条数据\n     * e.pageSize: 每页有多少条数据\n     */\n    changePage(e) {\n      var subStr = new RegExp(/pageid=\\d{0,3}/);\n      this.coreInterUrl = this.coreInterUrl.replace(\n        subStr,\n        \"pageid=\" + e.current\n      );\n      request({\n        url: this.coreInterUrl,\n        method: \"GET\"\n      }).then(res => {\n        if (res.data.code === 230003) {\n          console.log(res.data.data.data);\n          this.data = res.data.data.data;\n          this.pagination.total = res.data.data.totolPage * 10;\n        }\n      });\n    },\n    clickEdit(record) {\n      this.selectCoreData = record;\n      this.editVisible = true;\n    },\n\n    changeEdits(params) {\n      this.editVisible = params.visible;\n      if (params.reload) {\n        request({\n          url: this.coreInterUrl,\n          method: \"GET\"\n        }).then(res => {\n          if (res.data.code === 230003) {\n            console.log(res.data.data.data);\n            this.data = res.data.data.data;\n            this.pagination.total = res.data.data.totolPage * 10;\n          }\n        });\n      }\n    },\n\n    handleDeleteOk() {\n      const interfaceDetail = {\n        interfaceId: this.selectCoreData.interfaceId\n      };\n      request({\n        url: this.deleteCoreUrl,\n        method: \"POST\",\n        data: interfaceDetail\n      }).then(res => {\n        if (res.data.code === 250000) {\n          message.success(res.data.msg);\n          request({\n            url: this.coreInterUrl,\n            method: \"GET\"\n          }).then(res => {\n            if (res.data.code === 230003) {\n              console.log(res.data.data.data);\n              this.data = res.data.data.data;\n              this.pagination.total = res.data.data.totolPage * 10;\n            }\n          });\n        } else {\n          message.warning(res.data.msg);\n        }\n      });\n    },\n\n    getEndReqUrl(values) {\n      this.coreInterUrl = \"/api/tempinter/getcoreinter?pageid=1\";\n      if (values.urlcontent && values.belongBusiness) {\n        this.coreInterUrl =\n          this.coreInterUrl +\n          \"&urlcontent=\" +\n          values.urlcontent +\n          \"&belongBusiness=\" +\n          values.belongBusiness;\n      } else if (values.urlcontent && !values.belongBusiness) {\n        this.coreInterUrl =\n          this.coreInterUrl + \"&urlcontent=\" + values.urlcontent;\n      } else if (!values.urlcontent && values.belongBusiness) {\n        this.coreInterUrl =\n          this.coreInterUrl + \"&belongBusiness=\" + values.belongBusiness;\n      }\n    },\n    handleSearch() {\n      this.form.validateFields((error, values) => {\n        console.log(\"Received values of form: \", values);\n        this.getEndReqUrl(values);\n        request({\n          url: this.coreInterUrl,\n          method: \"GET\"\n        }).then(res => {\n          if (res.data.code === 230003) {\n            this.data = res.data.data.data;\n            this.pagination.total = res.data.data.totolPage * 10;\n          }\n        });\n      });\n    },\n    handleReset() {\n      this.form.resetFields();\n      this.coreInterUrl = \"/api/tempinter/getcoreinter?pageid=1\";\n      message.success(\"已经为您清空了所有搜索条件\");\n    },\n    showDeleteConfirm(record) {\n      this.selectCoreData = record;\n      const that = this;\n      Modal.confirm({\n        title: \"确认要删除此接口么？(删除之后不可恢复)\",\n        content: record.interfacePath,\n        okText: \"确认\",\n        okType: \"danger\",\n        cancelText: \"取消\",\n        onOk() {\n          that.handleDeleteOk();\n        },\n        onCancel() {\n          console.log(\"Cancel\");\n        }\n      });\n    }\n  }\n};\n</script>\n<style scoped>\n.ant-advanced-search-form .ant-form-item {\n  display: flex;\n}\n</style>\n"]}]}