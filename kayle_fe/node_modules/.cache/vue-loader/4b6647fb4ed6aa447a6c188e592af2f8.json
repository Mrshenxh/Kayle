{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shenxh/Desktop/qa_auto_test/src/views/interface/transcribe.vue?vue&type=style&index=0&id=5844185a&scoped=true&lang=less&","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/views/interface/transcribe.vue","mtime":1610452977885},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKW3YtY2xvYWtdIHsKICBkaXNwbGF5OiBub25lOwp9CgouYW50LWFkdmFuY2VkLXNlYXJjaC1mb3JtIHsKICBwYWRkaW5nOiAyNHB4OwogIGJhY2tncm91bmQ6ICNmYmZiZmI7CiAgYm9yZGVyOiAxcHggc29saWQgI2Q5ZDlkOTsKICBib3JkZXItcmFkaXVzOiA2cHg7Cn0KCi5hbnQtYWR2YW5jZWQtc2VhcmNoLWZvcm0gLmFudC1mb3JtLWl0ZW0gewogIGRpc3BsYXk6IGZsZXg7Cn0KCi5hbnQtYWR2YW5jZWQtc2VhcmNoLWZvcm0gLmFudC1mb3JtLWl0ZW0tY29udHJvbC13cmFwcGVyIHsKICBmbGV4OiAxOwp9CgojY29tcG9uZW50cy1mb3JtLWRlbW8tYWR2YW5jZWQtc2VhcmNoIC5hbnQtZm9ybSB7CiAgbWF4LXdpZHRoOiBub25lOwp9CiNjb21wb25lbnRzLWZvcm0tZGVtby1hZHZhbmNlZC1zZWFyY2ggewogIG1hcmdpbi10b3A6IDE2cHg7CiAgYm9yZGVyOiAxcHggZGFzaGVkICNlOWU5ZTk7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7CiAgbWluLWhlaWdodDogMjAwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIC8qIHBhZGRpbmctdG9wOiAxMHB4OyAqLwp9Cgouc2VhcmNoLXJlc3VsdC1saXN0IHsKICBtYXJnaW4tdG9wOiAxNnB4OwogIGJvcmRlcjogMXB4IGRhc2hlZCAjZTllOWU5OwogIGJvcmRlci1yYWRpdXM6IDZweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhOwogIG1pbi1oZWlnaHQ6IDIwMHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBwYWRkaW5nLXRvcDogMjBweDsKfQoKQG1lZGlhIChtaW4td2lkdGg6IDkwMHB4KSB7CiAgLnNlYXJjaC1tZXRoZG9kLXNlbGVjdCB7CiAgICB3aWR0aDogMTUwcHg7CiAgfQp9CgpAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpIHsKICAuc2VhcmNoLW1ldGhkb2Qtc2VsZWN0IHsKICAgIHdpZHRoOiAxMDBweDsKICB9Cn0K"},{"version":3,"sources":["transcribe.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiaA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"transcribe.vue","sourceRoot":"src/views/interface","sourcesContent":["<template>\n  <div v-cloak>\n    <createmitm v-show=\"createShow\" @create-event=\"getCreateData\"></createmitm>\n    <div id=\"components-form-demo-advanced-search\" v-show=\"has_mitmproxy\">\n      <a-form\n        class=\"ant-advanced-search-form\"\n        :form=\"form\"\n        @submit=\"handleSearch\"\n      >\n        <a-row :gutter=\"24\">\n          <a-col :span=\"8\">\n            <a-form-item label=\"URL查询\">\n              <a-input\n                placeholder=\"输入要查询URL信息\"\n                v-decorator=\"[`urlcontent`]\"\n              ></a-input>\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"8\">\n            <a-form-item label=\"应用查询\">\n              <a-input\n                placeholder=\"输入URL所属应用\"\n                v-decorator=\"[`applyname`]\"\n              ></a-input>\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"8\">\n            <a-form-item label=\"请求方式\">\n              <a-select\n                v-decorator=\"['selectMethod']\"\n                mode=\"multiple\"\n                placeholder=\"筛选请求method\"\n                class=\"search-methdod-select\"\n              >\n                <a-select-option value=\"GET\">\n                  GET\n                </a-select-option>\n                <a-select-option value=\"POST\">\n                  POST\n                </a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row>\n          <a-col :span=\"12\" :style=\"{ textAlign: 'left' }\">\n            <a-button type=\"primary\" @click=\"clearAllDataSource\"\n              >清除全部</a-button\n            >\n          </a-col>\n          <a-col :span=\"12\" :style=\"{ textAlign: 'right' }\">\n            <a-button type=\"primary\" html-type=\"submit\">\n              添加搜索规则\n            </a-button>\n            <a-button :style=\"{ marginLeft: '8px' }\" @click=\"handleReset\">\n              清空搜索规则\n            </a-button>\n            <!-- <a :style=\"{ marginLeft: '8px', fontSize: '12px' }\" @click=\"toggle\">\n            Collapse <a-icon :type=\"expand ? 'up' : 'down'\" />\n          </a> -->\n            <a-button\n              type=\"primary\"\n              @click=\"closemitmproxy\"\n              :style=\"{ marginLeft: '8px', fontSize: '12px' }\"\n              >关闭mitmproxy</a-button\n            >\n          </a-col>\n        </a-row>\n      </a-form>\n\n      <div class=\"search-result-list\">\n        <draggable\n          :columns=\"columns\"\n          :rowSelection=\"rowSelection\"\n          ref=\"draggable\"\n        ></draggable>\n      </div>\n      <a-form :style=\"{ marginTop: '8px' }\">\n        <a-form-item>\n          <a-row>\n            <a-col :span=\"24\" :style=\"{ textAlign: 'right' }\">\n              <a-button\n                type=\"primary\"\n                :style=\"{ marginLeft: '8px' }\"\n                @click=\"clickScreen\"\n                >{{ screenText }}</a-button\n              >\n              <a-button\n                type=\"primary\"\n                :style=\"{ marginLeft: '8px' }\"\n                :disabled=\"true\"\n                >确认</a-button\n              >\n            </a-col>\n          </a-row>\n        </a-form-item>\n      </a-form>\n    </div>\n  </div>\n</template>\n\n<script>\n// 录制上传页面\n\nimport request from \"@/utils/request\";\nimport createmitm from \"@/components/modulelist/createmitm\";\nimport { message } from \"ant-design-vue\";\nimport draggable from \"@/components/modulelist/draggable\";\n\nconst columns = [\n  {\n    title: \"接口path\",\n    width: 350,\n    dataIndex: \"interfacePath\",\n    key: \"interfacePath\",\n    scopedSlots: { customRender: \"interface-path\" }\n  },\n  {\n    title: \"请求方式\",\n    width: 100,\n    dataIndex: \"requestMethod\",\n    key: \"requestMethod\"\n  },\n  {\n    title: \"请求数据\",\n    dataIndex: \"requestData\",\n    key: \"requestData\",\n    width: 400,\n    scopedSlots: { customRender: \"request-data\" }\n  },\n  // { title: '请求Header', dataIndex: 'requestHeader', key: 'requestHeader', width: 200 , scopedSlots: { customRender: 'request-header',},},\n  // { title: '请求耗时', dataIndex: 'requestTime', key: '3', width: 100 },\n  {\n    title: \"Status\",\n    dataIndex: \"responseStatus\",\n    key: \"responseStatus\",\n    width: 100\n  },\n  // { title: '返回Header', dataIndex: 'responseHeader', key: 'responseHeader', width: 200 , scopedSlots: { customRender: 'response-header',},},\n  {\n    title: \"返回Data\",\n    dataIndex: \"responseData\",\n    key: \"responseData\",\n    scopedSlots: { customRender: \"response-data\" }\n  },\n  // { title: '请求Size', dataIndex: 'requestSize', key: '7', width: 100 },\n  // { title: '返回Size', dataIndex: 'responseSize', key: '8' },\n  {\n    title: \"Action\",\n    key: \"operation\",\n    fixed: \"right\",\n    width: 100,\n    scopedSlots: { customRender: \"action\" }\n  }\n];\n\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  },\n  onSelect: (record, selected, selectedRows) => {\n    console.log(record, selected, selectedRows);\n  },\n  onSelectAll: (selected, selectedRows, changeRows) => {\n    console.log(selected, selectedRows, changeRows);\n  }\n};\n\nexport default {\n  data() {\n    return {\n      columns: columns,\n      expand: false,\n      form: this.$form.createForm(this, { name: \"advanced_search\" }),\n      path: \"ws://10.14.8.89:3333/tempinter/tempsocket/flow/10000000\",\n      socket: \"\",\n      has_mitmproxy: false,\n      createShow: true,\n      mitm_message: {},\n      isEdited: false,\n      index: 0,\n      selectCondition: {}\n    };\n  },\n  components: {\n    createmitm,\n    draggable\n  },\n  computed: {\n    count() {\n      return this.expand ? 11 : 7;\n    },\n\n    // 添加筛选row相关策略\n    rowSelection() {\n      return this.isEdited ? rowSelection : null;\n    },\n    // 筛选/取消筛选按钮切换\n    screenText() {\n      return this.isEdited ? \"取消筛选\" : \"筛选\";\n    }\n  },\n  updated() {\n    console.log(\"updated\");\n  },\n  destroyed() {\n    if (this.socket !== \"\") {\n      // 销毁监听\n      this.socket.onclose = this.close;\n    }\n  },\n  created() {\n    // 在创建时候就请求查询是否有对应的port\n    console.log(this.$store.state.mitmproxy);\n    if (\n      sessionStorage.getItem(\"mitmproxy\") &&\n      this.$store.state.mitmproxy !== undefined &&\n      \"port\" in this.$store.state.mitmproxy &&\n      this.$store.state.mitmproxy.port !== \"\"\n    ) {\n      this.createShow = false;\n      this.has_mitmproxy = true;\n      this.init();\n    } else {\n      this.$store.dispatch({ type: \"getUserMitmproxy\" }).then(res => {\n        console.log(res);\n        if (res === 230000) {\n          this.createShow = true;\n          this.has_mitmproxy = false;\n        } else if (res === 230002) {\n          this.createShow = false;\n          this.has_mitmproxy = true;\n          this.init();\n        }\n      });\n    }\n  },\n  methods: {\n    // 点击搜索按钮，触发方法\n    handleSearch(e) {\n      e.preventDefault();\n      this.form.validateFields((error, values) => {\n        console.log(\"error\", error);\n        console.log(\"Received values of form: \", values);\n        this.selectCondition = values;\n        this.$refs.draggable.dataSource = [];\n        this.index = 0;\n        message.success(\"已经为您添加了接口筛选条件\");\n      });\n    },\n    // 点击清空按钮，触发方法\n    handleReset() {\n      this.form.resetFields();\n      this.selectCondition = {};\n      message.success(\"已经为您删除了所有筛选条件\");\n    },\n    // 搜索选项折叠\n    toggle() {\n      this.expand = !this.expand;\n    },\n    //点击删除全部，清空所有表格数据\n    clearAllDataSource() {\n      this.$refs.draggable.dataSource = [];\n      this.index = 0;\n    },\n    getCreateData(data) {\n      // 这个时候组件已经创建成功\n      this.mitm_message = data;\n      console.log(\"走到回调方法啦\");\n      console.log(this.$store.state.mitmproxy.port);\n      if (\n        this.$store.state.mitmproxy.port !== \"\" &&\n        this.$store.state.mitmproxy.mitm_id !== \"\"\n      ) {\n        console.log(\"进入判断\");\n        if (this.socket === \"\") {\n          this.init();\n        }\n        this.createShow = false;\n        this.has_mitmproxy = true;\n      }\n    },\n\n    init: function() {\n      if (typeof WebSocket === \"undefined\") {\n        alert(\"您的浏览器不支持socket\");\n      } else {\n        // 实例化socket\n        this.socket = new WebSocket(this.path);\n        // 监听socket连接\n        this.socket.onopen = this.open;\n        // 监听socket错误信息\n        this.socket.onerror = this.error;\n        // 监听socket消息\n        this.socket.onmessage = this.getMessage;\n      }\n    },\n    open: function() {\n      console.log(\"socket连接成功\");\n    },\n    error: function() {\n      console.log(\"连接错误\");\n    },\n    // 获取到数据之后，将数据填充给 子组件的dataSource\n    getMessage: function(msg) {\n      var eachData = JSON.parse(msg.data);\n      // console.log(msg.data);\n      var totalEachData = {\n        key: this.index,\n        interfacePath: eachData.req_url,\n        expireTime: eachData.expire_time,\n        mitmId: eachData.mitm_id,\n        reqStart: eachData.req_start,\n        reqEnd: eachData.req_end,\n        resStart: eachData.res_start,\n        resEnd: eachData.res_end,\n        userId: eachData.user_id,\n        requestMethod: eachData.req_method,\n        requestData:\n          eachData.req_method === \"GET\"\n            ? eachData.get_data\n            : eachData.post_data,\n        requestScheme: eachData.req_scheme,\n        requestHeader: eachData.req_header,\n        requestCookie: eachData.req_cookie,\n        responseCookie: eachData.res_cookie,\n        responseStatus: eachData.res_status_code,\n        responseHeader: eachData.res_header,\n        responseData: eachData.res_text,\n\n        popoverStatus: {\n          interfacePath: {\n            visiable: false,\n            clickVisiable: false\n          },\n          requestData: {\n            visiable: false,\n            clickVisiable: false\n          },\n          requestHeader: {\n            visiable: false,\n            clickVisiable: false\n          },\n          responseHeader: {\n            visiable: false,\n            clickVisiable: false\n          },\n          responseData: {\n            visiable: false,\n            clickVisiable: false\n          }\n        }\n      };\n\n      if (\n        this.selectCondition.urlcontent !== undefined &&\n        totalEachData.interfacePath.search(this.selectCondition.urlcontent) ===\n          -1\n      ) {\n        return;\n      }\n\n      if (\n        this.selectCondition.applyname !== undefined &&\n        totalEachData.interfacePath.search(this.selectCondition.applyname) ===\n          -1\n      ) {\n        return;\n      }\n\n      if (\n        this.selectCondition.selectMethod !== undefined &&\n        this.selectCondition.selectMethod.indexOf(\n          totalEachData.requestMethod\n        ) === -1\n      ) {\n        return;\n      }\n      if (this.$refs.draggable) {\n        this.$refs.draggable.dataSource.push(totalEachData);\n        this.index += 1;\n      }\n    },\n    send: function() {\n      this.socket.send(\"haha\");\n    },\n    close: function() {\n      console.log(\"socket已经关闭\");\n    },\n    closemitmproxy() {\n      request({\n        url: \"/api/tempinter/stopmitm\",\n        method: \"POST\"\n      }).then(res => {\n        if (res.data.code === 220000) {\n          this.$store.dispatch({ type: \"deleteUserMitmproxy\" });\n          message.success(\"已经为您关闭mitmproxy代理\");\n          this.socket.onclose = this.close;\n        } else if (res.data.code === 220001) {\n          message.warning(\"查询到你这边没有对应的mitmproxy代理\");\n        }\n      });\n    },\n    // 点击筛选/取消筛选按钮\n    clickScreen() {\n      console.log(\"clickScreen\");\n      this.isEdited = !this.isEdited;\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"less\">\n[v-cloak] {\n  display: none;\n}\n\n.ant-advanced-search-form {\n  padding: 24px;\n  background: #fbfbfb;\n  border: 1px solid #d9d9d9;\n  border-radius: 6px;\n}\n\n.ant-advanced-search-form .ant-form-item {\n  display: flex;\n}\n\n.ant-advanced-search-form .ant-form-item-control-wrapper {\n  flex: 1;\n}\n\n#components-form-demo-advanced-search .ant-form {\n  max-width: none;\n}\n#components-form-demo-advanced-search {\n  margin-top: 16px;\n  border: 1px dashed #e9e9e9;\n  border-radius: 6px;\n  background-color: #fafafa;\n  min-height: 200px;\n  text-align: center;\n  /* padding-top: 10px; */\n}\n\n.search-result-list {\n  margin-top: 16px;\n  border: 1px dashed #e9e9e9;\n  border-radius: 6px;\n  background-color: #fafafa;\n  min-height: 200px;\n  text-align: center;\n  padding-top: 20px;\n}\n\n@media (min-width: 900px) {\n  .search-methdod-select {\n    width: 150px;\n  }\n}\n\n@media (max-width: 900px) {\n  .search-methdod-select {\n    width: 100px;\n  }\n}\n</style>\n"]}]}