{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/thread-loader/dist/cjs.js!/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js!/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantable.vue","mtime":1610605270916},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy9zaGVueGgvRGVza3RvcC9xYV9hdXRvX3Rlc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHJlcXVlc3QgZnJvbSAiQC91dGlscy9yZXF1ZXN0IjsgLy8gaW1wb3J0IHttZXNzYWdlfSBmcm9tICdhbnQtZGVzaWduLXZ1ZSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFtdLAogICAgICBxdWVyeXBsYW5jb3JlOiAiL2FwaS9wbGFuL3F1ZXJ5cGxhbmNvcmU/IiwKICAgICAgcGFnZWlkOiAxLAogICAgICBjb3JlQ29sdW1uczogW10sCiAgICAgIHVuRG9uZUNvbHVtbnM6IFtdLAogICAgICBwYWdpbmF0aW9uOiB7CiAgICAgICAgdG90YWw6IDEwCiAgICAgIH0sCiAgICAgIGlzU3Bpbm5pbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgcHJvcHM6IFsiY29sdW1ucyIsICJ0YWJUeXBlIiwgInVzZXJzZWFyY2giXSwKICB3YXRjaDogewogICAgLy8g55uR5ZCsdGFiVHlwZeWPmOWMlu+8jOWmguaenOacieWPmOWMluWImemHjeaWsOivt+axggogICAgdGFiVHlwZTogZnVuY3Rpb24gdGFiVHlwZSgpIHsKICAgICAgdGhpcy5wYWdlaWQgPSAxOwogICAgICB0aGlzLmJhc2VSZXF1ZXN0RnVuYyh0aGlzLnBhZ2VpZCk7CiAgICB9LAogICAgdXNlcnNlYXJjaDogZnVuY3Rpb24gdXNlcnNlYXJjaCgpIHsKICAgICAgdGhpcy5iYXNlVXNlcnNlYXJjaCA9IHRoaXMudXNlcnNlYXJjaDsKICAgICAgdGhpcy5wYWdlaWQgPSAxOwogICAgICB0aGlzLmJhc2VSZXF1ZXN0RnVuYyh0aGlzLnBhZ2VpZCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgY29uc29sZS5sb2codGhpcy5jb2x1bW5zKTsKICAgIGNvbnNvbGUubG9nKHRoaXMudGFiVHlwZSk7CiAgICB0aGlzLmlzU3Bpbm5pbmcgPSB0cnVlOwoKICAgIGlmICh0aGlzLnRhYlR5cGUgPT09ICJjb3JlRGF0YSIpIHsKICAgICAgdGhpcy5jb3JlQ29sdW1ucy5wdXNoKHsKICAgICAgICB0aXRsZTogIuWMuemFjeS/oeaBryjns7vnu5/jgIHniYjmnKzjgIHmnLrlnospIiwKICAgICAgICBkYXRhSW5kZXg6ICJtYXRjaF9pbmZvbWF0aW9uIiwKICAgICAgICBrZXk6ICJtYXRjaF9pbmZvbWF0aW9uIiwKICAgICAgICBzY29wZWRTbG90czogewogICAgICAgICAgY3VzdG9tUmVuZGVyOiAiaW1hdGNoLWluZm9tYXRpb24iCiAgICAgICAgfSwKICAgICAgICB3aWR0aDogMzAwCiAgICAgIH0pOwogICAgICB0aGlzLmNvcmVDb2x1bW5zLnB1c2goewogICAgICAgIHRpdGxlOiAi5piv5ZCm5a6M5oiQIiwKICAgICAgICBkYXRhSW5kZXg6ICJpc19maW5pc2hlZCIsCiAgICAgICAga2V5OiAiaXNfZmluaXNoZWQiLAogICAgICAgIHdpZHRoOiAxMDAsCiAgICAgICAgLy8gZml4ZWQ6ICJyaWdodCIsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogImlzLWZpbmlzaGVkIgogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuY29yZUNvbHVtbnMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuY29sdW1ucyksIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmNvcmVDb2x1bW5zKSk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29yZUNvbHVtbnMpOwogICAgfSBlbHNlIGlmICh0aGlzLnRhYlR5cGUgPT09ICJ1bkRvbmVDb3JlIikgewogICAgICB0aGlzLnVuRG9uZUNvbHVtbnMgPSB0aGlzLmNvbHVtbnM7CiAgICB9CgogICAgdGhpcy5iYXNlUmVxdWVzdEZ1bmModGhpcy5wYWdlaWQpOwogICAgdGhpcy5pc1NwaW5uaW5nID0gZmFsc2U7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRRdWVyeVBsYW5Db3JlVVJMOiBmdW5jdGlvbiBnZXRRdWVyeVBsYW5Db3JlVVJMKHBhZ2VJZCkgewogICAgICB2YXIgYmFzZVF1ZXJ5VXJsID0gdGhpcy5xdWVyeXBsYW5jb3JlICsgInRhYnR5cGU9IiArIHRoaXMudGFiVHlwZSArICImcGFnZWlkPSIgKyBwYWdlSWQ7CgogICAgICBpZiAodGhpcy5iYXNlVXNlcnNlYXJjaCkgewogICAgICAgIGJhc2VRdWVyeVVybCA9IGJhc2VRdWVyeVVybCArICImdXNlcnNlYXJjaD0iICsgdGhpcy5iYXNlVXNlcnNlYXJjaDsKICAgICAgfQoKICAgICAgcmV0dXJuIGJhc2VRdWVyeVVybDsKICAgIH0sCiAgICBjaGFuZ2VQYWdlOiBmdW5jdGlvbiBjaGFuZ2VQYWdlKGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzdWJTdHIgPSBuZXcgUmVnRXhwKC9wYWdlaWQ9XGR7MCwzfS8pOwogICAgICB0aGlzLmNvcmVJbnRlclVybCA9IHRoaXMuY29yZUludGVyVXJsLnJlcGxhY2Uoc3ViU3RyLCAicGFnZWlkPSIgKyBlLmN1cnJlbnQpOwogICAgICByZXF1ZXN0KHsKICAgICAgICB1cmw6IHRoaXMuY29yZUludGVyVXJsLAogICAgICAgIG1ldGhvZDogIkdFVCIKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDIzMDAwMykgewogICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEuZGF0YS5kYXRhKTsKICAgICAgICAgIF90aGlzLmRhdGEgPSByZXMuZGF0YS5kYXRhLmRhdGE7CiAgICAgICAgICBfdGhpcy5wYWdpbmF0aW9uLnRvdGFsID0gcmVzLmRhdGEuZGF0YS50b3RvbFBhZ2VzICogMTA7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBiYXNlUmVxdWVzdEZ1bmM6IGZ1bmN0aW9uIGJhc2VSZXF1ZXN0RnVuYyhwYWdlaWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXF1ZXN0KHsKICAgICAgICB1cmw6IHRoaXMuZ2V0UXVlcnlQbGFuQ29yZVVSTChwYWdlaWQpLAogICAgICAgIG1ldGhvZDogIkdFVCIKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDMxMDAwMCkgewogICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEuZGF0YS5kYXRhKTsKICAgICAgICAgIF90aGlzMi5kYXRhID0gcmVzLmRhdGEuZGF0YS5kYXRhOwogICAgICAgICAgX3RoaXMyLnBhZ2luYXRpb24udG90YWwgPSByZXMuZGF0YS5kYXRhLnRvdG9sUGFnZXMgKiAxMDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMyLmRhdGEgPSBbXTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["plantable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <a-spin :spinning=\"isSpinning\" tip=\"Loading...\">\n      <a-table\n        :columns=\"tabType === 'coreData' ? coreColumns : unDoneColumns\"\n        :data-source=\"data\"\n        :pagination=\"pagination\"\n        :scroll=\"{ y: 300, x: 1500 }\"\n        bordered\n      >\n        <div slot=\"belongBusiness\" slot-scope=\"text, record\">\n          <a-tag :color=\"record.content === 'Content' ? 'volcano' : 'green'\">\n            {{ record.content }}\n          </a-tag>\n        </div>\n\n        <div slot=\"interface_regular\" slot-scope=\"text, record\">\n          <div>\n            {{ record.interface_regular }}\n          </div>\n        </div>\n\n        <div slot=\"imatch-infomation\" slot-scope=\"text, record\">\n          <div\n            v-for=\"(matchDict, index) in record.match_infomation\"\n            :key=\"index\"\n          >\n            <a-avatar shape=\"square\" icon=\"snippets\" size=\"small\" />\n            <a-tag color=\"pink\" style=\"margin-left:10px\">\n              {{ matchDict.inter_os }}\n            </a-tag>\n            <a-tag color=\"red\">\n              {{ matchDict.inter_release }}\n            </a-tag>\n            <a-tag color=\"orange\">\n              {{ matchDict.inter_brand }}\n            </a-tag>\n          </div>\n        </div>\n\n        <div slot=\"is-finished\" slot-scope=\"text, record\">\n          <a-icon\n            :type=\"record.is_finished ? 'check-circle' : 'close-circle'\"\n            theme=\"twoTone\"\n            style=\"font-size: 24px;margin-left:15px\"\n            :two-tone-color=\"record.is_finished ? 'green' : 'red'\"\n          ></a-icon>\n        </div>\n      </a-table>\n    </a-spin>\n  </div>\n</template>\n<script>\nimport request from \"@/utils/request\";\n// import {message} from 'ant-design-vue';\n\nexport default {\n  data() {\n    return {\n      data: [],\n      queryplancore: \"/api/plan/queryplancore?\",\n      pageid: 1,\n      coreColumns: [],\n      unDoneColumns: [],\n      pagination: {\n        total: 10\n      },\n      isSpinning: false\n    };\n  },\n  props: [\"columns\", \"tabType\", \"usersearch\"],\n\n  watch: {\n    // 监听tabType变化，如果有变化则重新请求\n    tabType() {\n      this.pageid = 1;\n      this.baseRequestFunc(this.pageid);\n    },\n    usersearch() {\n      this.baseUsersearch = this.usersearch;\n      this.pageid = 1;\n      this.baseRequestFunc(this.pageid);\n    }\n  },\n\n  created() {\n    console.log(this.columns);\n    console.log(this.tabType);\n    this.isSpinning = true;\n    if (this.tabType === \"coreData\") {\n      this.coreColumns.push({\n        title: \"匹配信息(系统、版本、机型)\",\n        dataIndex: \"match_infomation\",\n        key: \"match_infomation\",\n        scopedSlots: { customRender: \"imatch-infomation\" },\n        width: 300\n      });\n      this.coreColumns.push({\n        title: \"是否完成\",\n        dataIndex: \"is_finished\",\n        key: \"is_finished\",\n        width: 100,\n        // fixed: \"right\",\n        scopedSlots: { customRender: \"is-finished\" }\n      });\n      this.coreColumns = [...this.columns, ...this.coreColumns];\n      console.log(this.coreColumns);\n    } else if (this.tabType === \"unDoneCore\") {\n      this.unDoneColumns = this.columns;\n    }\n    this.baseRequestFunc(this.pageid);\n    this.isSpinning = false;\n  },\n  methods: {\n    getQueryPlanCoreURL(pageId) {\n      var baseQueryUrl =\n        this.queryplancore + \"tabtype=\" + this.tabType + \"&pageid=\" + pageId;\n      if (this.baseUsersearch) {\n        baseQueryUrl = baseQueryUrl + \"&usersearch=\" + this.baseUsersearch;\n      }\n      return baseQueryUrl;\n    },\n\n    changePage(e) {\n      var subStr = new RegExp(/pageid=\\d{0,3}/);\n      this.coreInterUrl = this.coreInterUrl.replace(\n        subStr,\n        \"pageid=\" + e.current\n      );\n      request({\n        url: this.coreInterUrl,\n        method: \"GET\"\n      }).then(res => {\n        if (res.data.code === 230003) {\n          console.log(res.data.data.data);\n          this.data = res.data.data.data;\n          this.pagination.total = res.data.data.totolPages * 10;\n        }\n      });\n    },\n\n    baseRequestFunc(pageid) {\n      request({\n        url: this.getQueryPlanCoreURL(pageid),\n        method: \"GET\"\n      }).then(res => {\n        if (res.data.code === 310000) {\n          console.log(res.data.data.data);\n          this.data = res.data.data.data;\n          this.pagination.total = res.data.data.totolPages * 10;\n        } else {\n          this.data = [];\n        }\n      });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/testplan"}]}