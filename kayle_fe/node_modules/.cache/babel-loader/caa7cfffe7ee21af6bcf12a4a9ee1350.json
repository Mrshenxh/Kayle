{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/thread-loader/dist/cjs.js!/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js!/Users/shenxh/Desktop/qa_auto_test/node_modules/eslint-loader/index.js??ref--13-0!/Users/shenxh/Desktop/qa_auto_test/src/store/modules/mitmproxy.js","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/store/modules/mitmproxy.js","mtime":1609227529421},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJhbnQtZGVzaWduLXZ1ZS9lcy9ub3RpZmljYXRpb24vc3R5bGUiOwppbXBvcnQgX25vdGlmaWNhdGlvbiBmcm9tICJhbnQtZGVzaWduLXZ1ZS9lcy9ub3RpZmljYXRpb24iOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvc2hlbnhoL0Rlc2t0b3AvcWFfYXV0b190ZXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3NoZW54aC9EZXNrdG9wL3FhX2F1dG9fdGVzdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCByZXF1ZXN0IGZyb20gIkAvdXRpbHMvcmVxdWVzdCI7CnZhciBtaXRtcHJveHkgPSB7CiAgc3RhdGU6IGZ1bmN0aW9uIHN0YXRlKCkgewogICAgcmV0dXJuIEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgibWl0bXByb3h5IikpIHx8IHsKICAgICAgcG9ydDogIiIsCiAgICAgIGhvc3RfbGlzdDogIiIsCiAgICAgIG1pdG1faWQ6ICIiLAogICAgICBleHBpcmVfdGltZTogIiIKICAgIH07CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNhdmVVc2VyTWl0bXByb3h5OiBmdW5jdGlvbiBzYXZlVXNlck1pdG1wcm94eShzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCJtaXRtcHJveHkiLCBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSk7CiAgICAgIHN0YXRlLnBvcnQgPSBwYXlsb2FkLnBvcnQ7CiAgICAgIHN0YXRlLmhvc3RfbGlzdCA9IHBheWxvYWQuaG9zdF9saXN0LCBzdGF0ZS5taXRtX2lkID0gcGF5bG9hZC5taXRtX2lkLCBzdGF0ZS5leHBpcmVfdGltZSA9IHBheWxvYWQuZXhwaXJlX3RpbWU7CiAgICB9LAogICAgLy8g5riF6Zmk55So5oi3bWl0bXByb3h5CiAgICByZW1vdmVVc2VyTWl0bXByb3h5OiBmdW5jdGlvbiByZW1vdmVVc2VyTWl0bXByb3h5KCkgewogICAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKCJtaXRtcHJveHkiKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldFVzZXJNaXRtcHJveHk6IGZ1bmN0aW9uIGdldFVzZXJNaXRtcHJveHkoX3JlZikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBoOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgICAgaCA9IF90aGlzLiRjcmVhdGVFbGVtZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdCh7CiAgICAgICAgICAgICAgICAgIHVybDogIi9hcGkvdGVtcGludGVyL3F1ZXJ5dXNlcnNvY2tldCIsCiAgICAgICAgICAgICAgICAgIG1ldGhvZDogIlBPU1QiCiAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDIzMDAwMCkgewogICAgICAgICAgICAgICAgICAgIC8vIOivpeeUqOaIt+acieWvueW6lOerr+WPo+WPtyDmk43kvZzliJ3lp4vljJYKICAgICAgICAgICAgICAgICAgICBjb21taXQoInNhdmVVc2VyTWl0bXByb3h5IiwgX29iamVjdFNwcmVhZCh7fSwgcmVzLmRhdGEuZGF0YSkpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiAyMzAwMDA7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzLmRhdGEuY29kZSA9PT0gMjMwMDAyKSB7CiAgICAgICAgICAgICAgICAgICAgLy8g5rKh5pyJ5a+55bqU56uv5Y+j5Y+3IOWxleekuuWvueW6lOWIm+W7uue7hOS7tgogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCLlsZXnpLrlr7nlupTliJvlu7rnu4Tku7YiKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gMjMwMDAyOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIF9ub3RpZmljYXRpb24uZXJyb3IoewogICAgICAgICAgICAgICAgICAgICAgLy9lc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGZ1bmN0aW9uIG1lc3NhZ2UoaCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaCgiZGl2IiwgWyJcdTY3RTVcdThCRTJcdTk1MTlcdThCRUY6ICIsIGgoInNwYW4iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgInN0eWxlIjogImNvbG9yOiByZWQiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sIFtyZXMuZGF0YS5tc2ddKV0pOwogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAi6K+35L2/55So5q2j56Gu55qE6K+35rGC5pa55byP77yBIgogICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2F2ZVVzZXJJbmZvOiBmdW5jdGlvbiBzYXZlVXNlckluZm8oX3JlZjIsIGRhdGEpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCJzYXZlVXNlck1pdG1wcm94eSIsIGRhdGEpOwogICAgfSwKICAgIGRlbGV0ZVVzZXJNaXRtcHJveHk6IGZ1bmN0aW9uIGRlbGV0ZVVzZXJNaXRtcHJveHkoX3JlZjMpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgY29tbWl0KCJyZW1vdmVVc2VyTWl0bXByb3h5Iik7CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBtaXRtcHJveHk7"},{"version":3,"sources":["/Users/shenxh/Desktop/qa_auto_test/src/store/modules/mitmproxy.js"],"names":["request","mitmproxy","state","JSON","parse","sessionStorage","getItem","port","host_list","mitm_id","expire_time","mutations","saveUserMitmproxy","payload","setItem","stringify","removeUserMitmproxy","removeItem","actions","getUserMitmproxy","commit","url","method","then","res","data","code","console","log","error","message","h","msg","description","saveUserInfo","deleteUserMitmproxy"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AAAA,WACLC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,KAAmD;AACjDC,MAAAA,IAAI,EAAE,EAD2C;AAEjDC,MAAAA,SAAS,EAAE,EAFsC;AAGjDC,MAAAA,OAAO,EAAE,EAHwC;AAIjDC,MAAAA,WAAW,EAAE;AAJoC,KAD9C;AAAA,GADS;AAShBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,iBADS,6BACSV,KADT,EACgBW,OADhB,EACyB;AAChCR,MAAAA,cAAc,CAACS,OAAf,CAAuB,WAAvB,EAAoCX,IAAI,CAACY,SAAL,CAAeF,OAAf,CAApC;AACAX,MAAAA,KAAK,CAACK,IAAN,GAAaM,OAAO,CAACN,IAArB;AACCL,MAAAA,KAAK,CAACM,SAAN,GAAkBK,OAAO,CAACL,SAA3B,EACGN,KAAK,CAACO,OAAN,GAAgBI,OAAO,CAACJ,OAD3B,EAEGP,KAAK,CAACQ,WAAN,GAAoBG,OAAO,CAACH,WAF/B;AAGD,KAPQ;AAQT;AACAM,IAAAA,mBATS,iCASa;AACpBX,MAAAA,cAAc,CAACY,UAAf,CAA0B,WAA1B;AACD;AAXQ,GATK;AAuBhBC,EAAAA,OAAO,EAAE;AACDC,IAAAA,gBADC,kCAC4B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,gBAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA;AAAA,uBAC3BpB,OAAO,CAAC;AACZqB,kBAAAA,GAAG,EAAE,gCADO;AAEZC,kBAAAA,MAAM,EAAE;AAFI,iBAAD,CAAP,CAGHC,IAHG,CAGE,UAAAC,GAAG,EAAI;AACb,sBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,MAAtB,EAA8B;AAC5B;AACAN,oBAAAA,MAAM,CAAC,mBAAD,oBAA2BI,GAAG,CAACC,IAAJ,CAASA,IAApC,EAAN;AACA,2BAAO,MAAP;AACD,mBAJD,MAIO,IAAID,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,MAAtB,EAA8B;AACnC;AACAC,oBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,2BAAO,MAAP;AACD,mBAJM,MAIA;AACL,kCAAaC,KAAb,CAAmB;AACjB;AACAC,sBAAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA;AAAA,mCAEY;AAFZ,4BAE0BP,GAAG,CAACC,IAAJ,CAASO,GAFnC;AAAA,uBAFO;AAOjBC,sBAAAA,WAAW,EAAE;AAPI,qBAAnB;;AASA,2BAAO,CAAC,CAAR;AACD;AACF,iBAxBK,CAD2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BlC,KA3BM;AA4BPC,IAAAA,YA5BO,+BA4BkBT,IA5BlB,EA4BwB;AAAA,UAAhBL,MAAgB,SAAhBA,MAAgB;AAC7BA,MAAAA,MAAM,CAAC,mBAAD,EAAsBK,IAAtB,CAAN;AACD,KA9BM;AA+BPU,IAAAA,mBA/BO,sCA+ByB;AAAA,UAAVf,MAAU,SAAVA,MAAU;AAC9BA,MAAAA,MAAM,CAAC,qBAAD,CAAN;AACD;AAjCM;AAvBO,CAAlB;AA4DA,eAAenB,SAAf","sourcesContent":["import request from \"@/utils/request\";\nimport { notification } from \"ant-design-vue\";\n\nconst mitmproxy = {\n  state: () =>\n    JSON.parse(sessionStorage.getItem(\"mitmproxy\")) || {\n      port: \"\",\n      host_list: \"\",\n      mitm_id: \"\",\n      expire_time: \"\"\n    },\n\n  mutations: {\n    saveUserMitmproxy(state, payload) {\n      sessionStorage.setItem(\"mitmproxy\", JSON.stringify(payload));\n      state.port = payload.port;\n      (state.host_list = payload.host_list),\n        (state.mitm_id = payload.mitm_id),\n        (state.expire_time = payload.expire_time);\n    },\n    // 清除用户mitmproxy\n    removeUserMitmproxy() {\n      sessionStorage.removeItem(\"mitmproxy\");\n    }\n  },\n\n  actions: {\n    async getUserMitmproxy({ commit }) {\n      await request({\n        url: \"/api/tempinter/queryusersocket\",\n        method: \"POST\"\n      }).then(res => {\n        if (res.data.code === 230000) {\n          // 该用户有对应端口号 操作初始化\n          commit(\"saveUserMitmproxy\", { ...res.data.data });\n          return 230000;\n        } else if (res.data.code === 230002) {\n          // 没有对应端口号 展示对应创建组件\n          console.log(\"展示对应创建组件\");\n          return 230002;\n        } else {\n          notification.error({\n            //eslint-disable-next-line no-unused-vars\n            message: h => (\n              <div>\n                查询错误: <span style=\"color: red\">{res.data.msg}</span>\n              </div>\n            ),\n            description: \"请使用正确的请求方式！\"\n          });\n          return -1;\n        }\n      });\n    },\n    saveUserInfo({ commit }, data) {\n      commit(\"saveUserMitmproxy\", data);\n    },\n    deleteUserMitmproxy({ commit }) {\n      commit(\"removeUserMitmproxy\");\n    }\n  }\n};\n\nexport default mitmproxy;\n"]}]}