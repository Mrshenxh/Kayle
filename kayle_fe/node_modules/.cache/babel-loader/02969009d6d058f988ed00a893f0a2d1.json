{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js!/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantable.vue","mtime":1611912960093},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvc2hlbnhoL0Rlc2t0b3AvcWFfYXV0b190ZXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCByZXF1ZXN0IGZyb20gIkAvdXRpbHMvcmVxdWVzdCI7CmltcG9ydCB7IGdldEJ1c2luZXNzQ29sb3IgfSBmcm9tICJAL3V0aWxzL2NvbW1vbmNvbmZpZyI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YTogW10sCiAgICAgIHF1ZXJ5cGxhbmNvcmU6ICIvYXBpL3BsYW4vcXVlcnlwbGFuY29yZT8iLAogICAgICBwYWdlaWQ6IDEsCiAgICAgIGNvcmVDb2x1bW5zOiBbXSwKICAgICAgdW5Eb25lQ29sdW1uczogW10sCiAgICAgIHBhZ2luYXRpb246IHsKICAgICAgICB0b3RhbDogMTAKICAgICAgfSwKICAgICAgaXNTcGlubmluZzogZmFsc2UKICAgIH07CiAgfSwKICBwcm9wczogWyJjb2x1bW5zIiwgInRhYlR5cGUiLCAidXNlcnNlYXJjaCJdLAogIHdhdGNoOiB7CiAgICAvLyDnm5HlkKx0YWJUeXBl5Y+Y5YyW77yM5aaC5p6c5pyJ5Y+Y5YyW5YiZ6YeN5paw6K+35rGCCiAgICB0YWJUeXBlOiBmdW5jdGlvbiB0YWJUeXBlKHZhbCwgb2xkVmFsKSB7CiAgICAgIGNvbnNvbGUubG9nKHZhbCk7CiAgICAgIGNvbnNvbGUubG9nKG9sZFZhbCk7CgogICAgICBpZiAodmFsICE9PSBvbGRWYWwpIHsKICAgICAgICB0aGlzLnBhZ2VpZCA9IDE7CiAgICAgICAgY29uc29sZS5sb2coInRhYlR5cGUiKTsKICAgICAgICB0aGlzLmJhc2VSZXF1ZXN0RnVuYyh0aGlzLnBhZ2VpZCk7CiAgICAgIH0KICAgIH0sCiAgICB1c2Vyc2VhcmNoOiBmdW5jdGlvbiB1c2Vyc2VhcmNoKCkgewogICAgICB0aGlzLmJhc2VVc2Vyc2VhcmNoID0gdGhpcy51c2Vyc2VhcmNoOwogICAgICB0aGlzLnBhZ2VpZCA9IDE7CiAgICAgIHRoaXMuYmFzZVJlcXVlc3RGdW5jKHRoaXMucGFnZWlkKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICBjb25zb2xlLmxvZyh0aGlzLmNvbHVtbnMpOwogICAgY29uc29sZS5sb2codGhpcy50YWJUeXBlKTsKICAgIHRoaXMuaXNTcGlubmluZyA9IHRydWU7CgogICAgaWYgKHRoaXMudGFiVHlwZSA9PT0gImNvcmVEYXRhIikgewogICAgICB0aGlzLmNvcmVDb2x1bW5zLnB1c2goewogICAgICAgIHRpdGxlOiAi5Yy56YWN5L+h5oGvKOezu+e7n+OAgeeJiOacrOOAgeacuuWeiykiLAogICAgICAgIGRhdGFJbmRleDogIm1hdGNoX2luZm9tYXRpb24iLAogICAgICAgIGtleTogIm1hdGNoX2luZm9tYXRpb24iLAogICAgICAgIHNjb3BlZFNsb3RzOiB7CiAgICAgICAgICBjdXN0b21SZW5kZXI6ICJpbWF0Y2gtaW5mb21hdGlvbiIKICAgICAgICB9LAogICAgICAgIHdpZHRoOiAzMDAKICAgICAgfSk7CiAgICAgIHRoaXMuY29yZUNvbHVtbnMucHVzaCh7CiAgICAgICAgdGl0bGU6ICLmmK/lkKblrozmiJAiLAogICAgICAgIGRhdGFJbmRleDogImlzX2ZpbmlzaGVkIiwKICAgICAgICBrZXk6ICJpc19maW5pc2hlZCIsCiAgICAgICAgd2lkdGg6IDEwMCwKICAgICAgICAvLyBmaXhlZDogInJpZ2h0IiwKICAgICAgICBzY29wZWRTbG90czogewogICAgICAgICAgY3VzdG9tUmVuZGVyOiAiaXMtZmluaXNoZWQiCiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5jb3JlQ29sdW1ucyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5jb2x1bW5zKSwgX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuY29yZUNvbHVtbnMpKTsKICAgICAgY29uc29sZS5sb2codGhpcy5jb3JlQ29sdW1ucyk7CiAgICB9IGVsc2UgaWYgKHRoaXMudGFiVHlwZSA9PT0gInVuRG9uZUNvcmUiKSB7CiAgICAgIHRoaXMudW5Eb25lQ29sdW1ucyA9IHRoaXMuY29sdW1uczsKICAgIH0KCiAgICB0aGlzLmJhc2VSZXF1ZXN0RnVuYyh0aGlzLnBhZ2VpZCk7CiAgICB0aGlzLmlzU3Bpbm5pbmcgPSBmYWxzZTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFF1ZXJ5UGxhbkNvcmVVUkw6IGZ1bmN0aW9uIGdldFF1ZXJ5UGxhbkNvcmVVUkwocGFnZUlkKSB7CiAgICAgIHZhciBiYXNlUXVlcnlVcmwgPSB0aGlzLnF1ZXJ5cGxhbmNvcmUgKyAidGFidHlwZT0iICsgdGhpcy50YWJUeXBlICsgIiZwYWdlaWQ9IiArIHBhZ2VJZDsKCiAgICAgIGlmICh0aGlzLmJhc2VVc2Vyc2VhcmNoKSB7CiAgICAgICAgYmFzZVF1ZXJ5VXJsID0gYmFzZVF1ZXJ5VXJsICsgIiZ1c2Vyc2VhcmNoPSIgKyB0aGlzLmJhc2VVc2Vyc2VhcmNoOwogICAgICB9CgogICAgICByZXR1cm4gYmFzZVF1ZXJ5VXJsOwogICAgfSwKICAgIGJhc2VSZXF1ZXN0RnVuYzogZnVuY3Rpb24gYmFzZVJlcXVlc3RGdW5jKHBhZ2VpZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmVxdWVzdCh7CiAgICAgICAgdXJsOiB0aGlzLmdldFF1ZXJ5UGxhbkNvcmVVUkwocGFnZWlkKSwKICAgICAgICBtZXRob2Q6ICJHRVQiCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAzMzAwMDAgfHwgcmVzLmRhdGEuY29kZSA9PT0gMzMwMDA2KSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YS5kYXRhLmRhdGEpOwogICAgICAgICAgY29uc29sZS5sb2coImhhaGEiKTsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEudG90YWxQYWdlcyk7CiAgICAgICAgICBfdGhpcy5kYXRhID0gcmVzLmRhdGEuZGF0YS5kYXRhOwogICAgICAgICAgX3RoaXMucGFnaW5hdGlvbi50b3RhbCA9IHJlcy5kYXRhLmRhdGEudG90YWxQYWdlcyAqIDEwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpcy5kYXRhID0gW107CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBjaGFuZ2VQYWdlOiDlvZPliIbpobXlj5jljJbml7bvvIzop6blj5HnmoTmlrnms5UKICAgICAqIGUuY3VycmVudDog5b2T5YmN6aG155qEcGFnZWlkCiAgICAgKiBlLnRvdGFsOiDkuIDlhbHlpJrlsJHmnaHmlbDmja4KICAgICAqIGUucGFnZVNpemU6IOavj+mhteacieWkmuWwkeadoeaVsOaNrgogICAgICovCiAgICBjaGFuZ2VQYWdlOiBmdW5jdGlvbiBjaGFuZ2VQYWdlKGUpIHsKICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIHRoaXMuYmFzZVJlcXVlc3RGdW5jKGUuY3VycmVudCk7CiAgICB9LAogICAgcmV0dXJuQnVzQ29sb3I6IGZ1bmN0aW9uIHJldHVybkJ1c0NvbG9yKHJlY29yZCkgewogICAgICByZXR1cm4gZ2V0QnVzaW5lc3NDb2xvcihyZWNvcmQuY29udGVudCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["plantable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <a-spin :spinning=\"isSpinning\" tip=\"Loading...\">\n      <a-table\n        :columns=\"tabType === 'coreData' ? coreColumns : unDoneColumns\"\n        :data-source=\"data\"\n        :pagination=\"pagination\"\n        :scroll=\"{ y: 500, x: 1500 }\"\n        @change=\"changePage\"\n        bordered\n      >\n        <div slot=\"belongBusiness\" slot-scope=\"text, record\">\n          <a-tag :color=\"returnBusColor(record)\">\n            {{ record.content }}\n          </a-tag>\n        </div>\n\n        <div slot=\"interface_regular\" slot-scope=\"text, record\">\n          <div>\n            {{ record.interface_regular }}\n          </div>\n        </div>\n\n        <div slot=\"imatch-infomation\" slot-scope=\"text, record\">\n          <div\n            v-for=\"(matchDict, index) in record.match_infomation\"\n            :key=\"index\"\n          >\n            <a-avatar shape=\"square\" icon=\"snippets\" size=\"small\" />\n            <a-tag color=\"pink\" style=\"margin-left:10px\">\n              {{ matchDict.inter_os }}\n            </a-tag>\n            <a-tag color=\"red\">\n              {{ matchDict.inter_release }}\n            </a-tag>\n            <a-tag color=\"orange\">\n              {{ matchDict.inter_brand }}\n            </a-tag>\n          </div>\n        </div>\n\n        <div slot=\"is-finished\" slot-scope=\"text, record\">\n          <a-icon\n            :type=\"record.is_finished ? 'check-circle' : 'close-circle'\"\n            theme=\"twoTone\"\n            style=\"font-size: 24px;margin-left:15px\"\n            :two-tone-color=\"record.is_finished ? 'green' : 'red'\"\n          ></a-icon>\n        </div>\n      </a-table>\n    </a-spin>\n  </div>\n</template>\n<script>\nimport request from \"@/utils/request\";\nimport { getBusinessColor } from \"@/utils/commonconfig\";\n\nexport default {\n  data() {\n    return {\n      data: [],\n      queryplancore: \"/api/plan/queryplancore?\",\n      pageid: 1,\n      coreColumns: [],\n      unDoneColumns: [],\n      pagination: {\n        total: 10\n      },\n      isSpinning: false\n    };\n  },\n  props: [\"columns\", \"tabType\", \"usersearch\"],\n\n  watch: {\n    // 监听tabType变化，如果有变化则重新请求\n    tabType(val, oldVal) {\n      console.log(val);\n      console.log(oldVal);\n      if (val !== oldVal) {\n        this.pageid = 1;\n        console.log(\"tabType\");\n        this.baseRequestFunc(this.pageid);\n      }\n    },\n    usersearch() {\n      this.baseUsersearch = this.usersearch;\n      this.pageid = 1;\n      this.baseRequestFunc(this.pageid);\n    }\n  },\n\n  created() {\n    console.log(this.columns);\n    console.log(this.tabType);\n    this.isSpinning = true;\n    if (this.tabType === \"coreData\") {\n      this.coreColumns.push({\n        title: \"匹配信息(系统、版本、机型)\",\n        dataIndex: \"match_infomation\",\n        key: \"match_infomation\",\n        scopedSlots: { customRender: \"imatch-infomation\" },\n        width: 300\n      });\n      this.coreColumns.push({\n        title: \"是否完成\",\n        dataIndex: \"is_finished\",\n        key: \"is_finished\",\n        width: 100,\n        // fixed: \"right\",\n        scopedSlots: { customRender: \"is-finished\" }\n      });\n      this.coreColumns = [...this.columns, ...this.coreColumns];\n      console.log(this.coreColumns);\n    } else if (this.tabType === \"unDoneCore\") {\n      this.unDoneColumns = this.columns;\n    }\n    this.baseRequestFunc(this.pageid);\n    this.isSpinning = false;\n  },\n  methods: {\n    getQueryPlanCoreURL(pageId) {\n      var baseQueryUrl =\n        this.queryplancore + \"tabtype=\" + this.tabType + \"&pageid=\" + pageId;\n      if (this.baseUsersearch) {\n        baseQueryUrl = baseQueryUrl + \"&usersearch=\" + this.baseUsersearch;\n      }\n      return baseQueryUrl;\n    },\n    baseRequestFunc(pageid) {\n      request({\n        url: this.getQueryPlanCoreURL(pageid),\n        method: \"GET\"\n      }).then(res => {\n        if (res.data.code === 330000 || res.data.code === 330006) {\n          console.log(res.data.data.data);\n          console.log(\"haha\");\n          console.log(res.data.data.totalPages);\n          this.data = res.data.data.data;\n          this.pagination.total = res.data.data.totalPages * 10;\n        } else {\n          this.data = [];\n        }\n      });\n    },\n    /**\n     * changePage: 当分页变化时，触发的方法\n     * e.current: 当前页的pageid\n     * e.total: 一共多少条数据\n     * e.pageSize: 每页有多少条数据\n     */\n    changePage(e) {\n      console.log(e);\n      this.baseRequestFunc(e.current);\n    },\n\n    returnBusColor(record) {\n      return getBusinessColor(record.content);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/testplan"}]}