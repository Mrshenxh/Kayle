{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js!/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantotalinter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/components/testplan/plantotalinter.vue","mtime":1610019117442},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy9zaGVueGgvRGVza3RvcC9xYV9hdXRvX3Rlc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHJlcXVlc3QgZnJvbSAnQC91dGlscy9yZXF1ZXN0JzsgLy8gaW1wb3J0IHttZXNzYWdlfSBmcm9tICdhbnQtZGVzaWduLXZ1ZSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFtdLAogICAgICBxdWVyeXBsYW5jb3JlOiAiL2FwaS9wbGFuL3F1ZXJ5cGxhbmNvcmU/IiwKICAgICAgcGFnZWlkOiAxLAogICAgICBjb3JlQ29sdW1uczogW10sCiAgICAgIHVuRG9uZUNvbHVtbnM6IFtdLAogICAgICBwYWdpbmF0aW9uOiB7CiAgICAgICAgdG90YWw6IDEwCiAgICAgIH0KICAgIH07CiAgfSwKICBwcm9wczogWyJjb2x1bW5zIiwgInRhYlR5cGUiLCAidXNlcnNlYXJjaCJdLAogIHdhdGNoOiB7CiAgICAvLyDnm5HlkKx0YWJUeXBl5Y+Y5YyW77yM5aaC5p6c5pyJ5Y+Y5YyW5YiZ6YeN5paw6K+35rGCCiAgICB0YWJUeXBlOiBmdW5jdGlvbiB0YWJUeXBlKCkgewogICAgICB0aGlzLnBhZ2VpZCA9IDE7CiAgICAgIHRoaXMuYmFzZVJlcXVlc3RGdW5jKHRoaXMucGFnZWlkKTsKICAgIH0sCiAgICB1c2Vyc2VhcmNoOiBmdW5jdGlvbiB1c2Vyc2VhcmNoKCkgewogICAgICB0aGlzLmJhc2VVc2Vyc2VhcmNoID0gdGhpcy51c2Vyc2VhcmNoOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKHRoaXMuY29sdW1ucyk7CiAgICBjb25zb2xlLmxvZyh0aGlzLnRhYlR5cGUpOwoKICAgIGlmICh0aGlzLnRhYlR5cGUgPT09ICJjb3JlRGF0YSIpIHsKICAgICAgdGhpcy5jb3JlQ29sdW1ucy5wdXNoKHsKICAgICAgICB0aXRsZTogJ+WMuemFjeS/oeaBrycsCiAgICAgICAgZGF0YUluZGV4OiAnbWF0Y2hfaW5mb21hdGlvbicsCiAgICAgICAga2V5OiAnbWF0Y2hfaW5mb21hdGlvbicsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogImltYXRjaC1pbmZvbWF0aW9uIgogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuY29yZUNvbHVtbnMucHVzaCh7CiAgICAgICAgdGl0bGU6ICfmmK/lkKblrozmiJAnLAogICAgICAgIGRhdGFJbmRleDogJ2lzX2ZpbmlzaGVkJywKICAgICAgICBrZXk6ICdpc19maW5pc2hlZCcsCiAgICAgICAgd2lkdGg6IDEwMCwKICAgICAgICBmaXhlZDogJ3JpZ2h0JywKICAgICAgICBzY29wZWRTbG90czogewogICAgICAgICAgY3VzdG9tUmVuZGVyOiAiaXMtZmluaXNoZWQiCiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5jb3JlQ29sdW1ucyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5jb2x1bW5zKSwgX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuY29yZUNvbHVtbnMpKTsKICAgICAgY29uc29sZS5sb2codGhpcy5jb3JlQ29sdW1ucyk7CiAgICB9IGVsc2UgaWYgKHRoaXMudGFiVHlwZSA9PT0gInVuRG9uZUNvcmUiKSB7CiAgICAgIHRoaXMudW5Eb25lQ29sdW1ucyA9IHRoaXMuY29sdW1uczsKICAgIH0KCiAgICB0aGlzLmJhc2VSZXF1ZXN0RnVuYyh0aGlzLnBhZ2VpZCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRRdWVyeVBsYW5Db3JlVVJMOiBmdW5jdGlvbiBnZXRRdWVyeVBsYW5Db3JlVVJMKHBhZ2VJZCkgewogICAgICB2YXIgYmFzZVF1ZXJ5VXJsID0gdGhpcy5xdWVyeXBsYW5jb3JlICsgInRhYnR5cGU9IiArIHRoaXMudGFiVHlwZSArICImcGFnZWlkPSIgKyBwYWdlSWQ7CgogICAgICBpZiAodGhpcy5iYXNlVXNlcnNlYXJjaCkgewogICAgICAgIGJhc2VRdWVyeVVybCA9IGJhc2VRdWVyeVVybCArICImdXNlcnNlYXJjaD0iICsgdGhpcy5iYXNlVXNlcnNlYXJjaDsKICAgICAgfQoKICAgICAgcmV0dXJuIGJhc2VRdWVyeVVybDsKICAgIH0sCiAgICBjaGFuZ2VQYWdlOiBmdW5jdGlvbiBjaGFuZ2VQYWdlKGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzdWJTdHIgPSBuZXcgUmVnRXhwKC9wYWdlaWQ9XGR7MCwzfS8pOwogICAgICB0aGlzLmNvcmVJbnRlclVybCA9IHRoaXMuY29yZUludGVyVXJsLnJlcGxhY2Uoc3ViU3RyLCAicGFnZWlkPSIgKyBlLmN1cnJlbnQpOwogICAgICByZXF1ZXN0KHsKICAgICAgICB1cmw6IHRoaXMuY29yZUludGVyVXJsLAogICAgICAgIG1ldGhvZDogIkdFVCIKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDIzMDAwMykgewogICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEuZGF0YS5kYXRhKTsKICAgICAgICAgIF90aGlzLmRhdGEgPSByZXMuZGF0YS5kYXRhLmRhdGE7CiAgICAgICAgICBfdGhpcy5wYWdpbmF0aW9uLnRvdGFsID0gcmVzLmRhdGEuZGF0YS50b3RvbFBhZ2VzICogMTA7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBiYXNlUmVxdWVzdEZ1bmM6IGZ1bmN0aW9uIGJhc2VSZXF1ZXN0RnVuYyhwYWdlaWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXF1ZXN0KHsKICAgICAgICB1cmw6IHRoaXMuZ2V0UXVlcnlQbGFuQ29yZVVSTChwYWdlaWQpLAogICAgICAgIG1ldGhvZDogIkdFVCIKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDMxMDAwMCkgewogICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEuZGF0YS5kYXRhKTsKICAgICAgICAgIF90aGlzMi5kYXRhID0gcmVzLmRhdGEuZGF0YS5kYXRhOwogICAgICAgICAgX3RoaXMyLnBhZ2luYXRpb24udG90YWwgPSByZXMuZGF0YS5kYXRhLnRvdG9sUGFnZXMgKiAxMDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMyLmRhdGEgPSBbXTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["plantotalinter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,OAAA,MAAA,iBAAA,C,CACA;;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA,0BAFA;AAGA,MAAA,MAAA,EAAA,CAHA;AAIA,MAAA,WAAA,EAAA,EAJA;AAKA,MAAA,aAAA,EAAA,EALA;AAMA,MAAA,UAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA;AANA,KAAA;AAUA,GAZA;AAaA,EAAA,KAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,YAAA,CAbA;AAeA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,OAFA,qBAEA;AACA,WAAA,MAAA,GAAA,CAAA;AACA,WAAA,eAAA,CAAA,KAAA,MAAA;AACA,KALA;AAMA,IAAA,UANA,wBAMA;AACA,WAAA,cAAA,GAAA,KAAA,UAAA;AACA;AARA,GAfA;AA0BA,EAAA,OA1BA,qBA0BA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,OAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,OAAA;;AACA,QAAA,KAAA,OAAA,KAAA,UAAA,EAAA;AACA,WAAA,WAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,SAAA,EAAA,kBAFA;AAGA,QAAA,GAAA,EAAA,kBAHA;AAIA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAJA,OAAA;AAMA,WAAA,WAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,SAAA,EAAA,aAFA;AAGA,QAAA,GAAA,EAAA,aAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,KAAA,EAAA,OALA;AAMA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AANA,OAAA;AAQA,WAAA,WAAA,gCAAA,KAAA,OAAA,sBAAA,KAAA,WAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,WAAA;AACA,KAjBA,MAiBA,IAAA,KAAA,OAAA,KAAA,YAAA,EAAA;AACA,WAAA,aAAA,GAAA,KAAA,OAAA;AACA;;AACA,SAAA,eAAA,CAAA,KAAA,MAAA;AACA,GAlDA;AAmDA,EAAA,OAAA,EAAA;AACA,IAAA,mBADA,+BACA,MADA,EACA;AACA,UAAA,YAAA,GAAA,KAAA,aAAA,GAAA,UAAA,GAAA,KAAA,OAAA,GAAA,UAAA,GAAA,MAAA;;AACA,UAAA,KAAA,cAAA,EAAA;AACA,QAAA,YAAA,GAAA,YAAA,GAAA,cAAA,GAAA,KAAA,cAAA;AACA;;AACA,aAAA,YAAA;AACA,KAPA;AASA,IAAA,UATA,sBASA,CATA,EASA;AAAA;;AACA,UAAA,MAAA,GAAA,IAAA,MAAA,CAAA,gBAAA,CAAA;AACA,WAAA,YAAA,GAAA,KAAA,YAAA,CAAA,OAAA,CACA,MADA,EAEA,YAAA,CAAA,CAAA,OAFA,CAAA;AAIA,MAAA,OAAA,CAAA;AACA,QAAA,GAAA,EAAA,KAAA,YADA;AAEA,QAAA,MAAA,EAAA;AAFA,OAAA,CAAA,CAGA,IAHA,CAGA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,IAAA,KAAA,MAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,UAAA,KAAA,CAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA;AACA,OATA;AAUA,KAzBA;AA2BA,IAAA,eA3BA,2BA2BA,MA3BA,EA2BA;AAAA;;AACA,MAAA,OAAA,CAAA;AACA,QAAA,GAAA,EAAA,KAAA,mBAAA,CAAA,MAAA,CADA;AAEA,QAAA,MAAA,EAAA;AAFA,OAAA,CAAA,CAGA,IAHA,CAGA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,IAAA,KAAA,MAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,SAJA,MAIA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,EAAA;AACA;AACA,OAXA;AAYA;AAxCA;AAnDA,CAAA","sourcesContent":["<template>\n  <a-table\n    :columns=\"tabType === 'coreData' ? coreColumns: unDoneColumns\"\n    :data-source=\"data\"\n    :pagination=\"pagination\"\n    :scroll=\"{ y: 600, x: 1500 }\"\n    bordered\n  >\n    <div slot=\"belongBusiness\" slot-scope=\"text, record\">\n        <a-tag\n        :color=\"record.content === 'Content' ? 'volcano' : 'green'\"\n        >\n        {{ record.content }}\n        </a-tag>\n    </div>\n\n    <div slot=\"is-finished\" slot-scope=\"text, record\">\n        <a-icon :type=\"record.is_finished ? 'check-circle': 'close-circle'\" \n        theme=\"twoTone\" \n        style=\"font-size: 24px;margin-left:10px\"\n        :two-tone-color=\"record.is_finished ? 'green': 'red'\"></a-icon>\n    </div>\n  </a-table>\n\n</template>\n<script>\n\nimport request from '@/utils/request';\n// import {message} from 'ant-design-vue';\n\nexport default {\n  data() {\n    return {\n      data: [],\n      queryplancore: \"/api/plan/queryplancore?\",\n      pageid: 1,\n      coreColumns: [],\n      unDoneColumns: [],\n      pagination: {\n        total: 10\n      },\n    };\n  },\n  props: [\"columns\", \"tabType\", \"usersearch\"],\n  \n  watch:{\n      // 监听tabType变化，如果有变化则重新请求\n      tabType(){\n            this.pageid = 1;\n            this.baseRequestFunc(this.pageid);\n      },\n      usersearch(){\n          this.baseUsersearch = this.usersearch;\n      }\n  },\n\n  created(){\n      console.log(this.columns);\n      console.log(this.tabType);\n      if (this.tabType === \"coreData\") {\n          this.coreColumns.push({\n              title: '匹配信息',\n              dataIndex: 'match_infomation',\n              key: 'match_infomation',\n              scopedSlots: { customRender: \"imatch-infomation\" }\n          })\n          this.coreColumns.push({\n              title: '是否完成',\n              dataIndex: 'is_finished',\n              key: 'is_finished',\n              width: 100,\n              fixed: 'right',\n              scopedSlots: { customRender: \"is-finished\" }\n          });\n          this.coreColumns = [...this.columns, ...this.coreColumns]\n          console.log(this.coreColumns);\n      }else if (this.tabType === \"unDoneCore\") {\n          this.unDoneColumns = this.columns\n      }\n      this.baseRequestFunc(this.pageid);\n  },\n  methods: {\n      getQueryPlanCoreURL(pageId) {\n          var baseQueryUrl = this.queryplancore + \"tabtype=\" + this.tabType + \"&pageid=\" + pageId;\n          if (this.baseUsersearch) {\n              baseQueryUrl = baseQueryUrl + \"&usersearch=\"+this.baseUsersearch\n          }\n          return baseQueryUrl\n      },\n\n      changePage(e) {\n          var subStr = new RegExp(/pageid=\\d{0,3}/);\n          this.coreInterUrl = this.coreInterUrl.replace(\n              subStr,\n              \"pageid=\" + e.current\n              );\n          request({\n              url: this.coreInterUrl,\n              method: \"GET\"\n          }).then(res => {\n            if (res.data.code === 230003) {\n                console.log(res.data.data.data);\n                this.data = res.data.data.data;\n                this.pagination.total = res.data.data.totolPages * 10;\n                }\n            });\n      },\n\n      baseRequestFunc(pageid){\n          request({\n              url: this.getQueryPlanCoreURL(pageid),\n              method: \"GET\"\n          }).then(res => {\n              if (res.data.code === 310000) {\n                  console.log(res.data.data.data);\n                  this.data = res.data.data.data;\n                  this.pagination.total = res.data.data.totolPages * 10;\n              }else {\n                  this.data = [];\n              }\n          });\n      },\n    },\n};\n</script>\n"],"sourceRoot":"src/components/testplan"}]}