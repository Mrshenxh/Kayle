{"remainingRequest":"/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js!/Users/shenxh/Desktop/qa_auto_test/node_modules/eslint-loader/index.js??ref--13-0!/Users/shenxh/Desktop/qa_auto_test/src/store/modules/auth.js","dependencies":[{"path":"/Users/shenxh/Desktop/qa_auto_test/src/store/modules/auth.js","mtime":1604283302828},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shenxh/Desktop/qa_auto_test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3NoZW54aC9EZXNrdG9wL3FhX2F1dG9fdGVzdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vLi4vcm91dGVyJzsKaW1wb3J0IHJlcXVlc3QgZnJvbSAnQC91dGlscy9yZXF1ZXN0JzsKdmFyIGF1dGggPSB7CiAgc3RhdGU6IGZ1bmN0aW9uIHN0YXRlKCkgewogICAgcmV0dXJuIEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgiYXV0aCIpKSB8fCB7CiAgICAgIHVzZXJJZDogJ3Rlc3QnLAogICAgICB1c2VyVG9rZW46ICcnCiAgICB9OwogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzYXZlVXNlck1lc3NhZ2U6IGZ1bmN0aW9uIHNhdmVVc2VyTWVzc2FnZShzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCJhdXRoIiwgSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkpOwogICAgICBzdGF0ZS51c2VySWQgPSBwYXlsb2FkLnVzZXJJZDsKICAgICAgc3RhdGUudXNlclRva2VuID0gcGF5bG9hZC51c2VyVG9rZW47CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBqdXN0TG9naW5TeXN0ZW06IGZ1bmN0aW9uIGp1c3RMb2dpblN5c3RlbShfcmVmLCBfcmVmMikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHBheWxvYWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBwYXlsb2FkID0gX3JlZjIucGF5bG9hZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3QoewogICAgICAgICAgICAgICAgICB1cmw6ICIiLAogICAgICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICAgICAgZGF0YTogcGF5bG9hZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2F2ZVVzZXJNZXNzYWdlJywgewogICAgICAgICAgICAgICAgICBwYXlsb2FkOiBwYXlsb2FkCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKHBheWxvYWQucGF0aCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzYXZlVXNlckluZm86IGZ1bmN0aW9uIHNhdmVVc2VySW5mbyhfcmVmMywgZGF0YSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICBjb21taXQoJ3NhdmVVc2VyTWVzc2FnZScsIGRhdGEpOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgYXV0aDs="},{"version":3,"sources":["/Users/shenxh/Desktop/qa_auto_test/src/store/modules/auth.js"],"names":["router","request","auth","state","JSON","parse","sessionStorage","getItem","userId","userToken","mutations","saveUserMessage","payload","setItem","stringify","actions","justLoginSystem","commit","url","method","data","push","path","saveUserInfo"],"mappings":";;AACA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAGA,IAAMC,IAAI,GAAG;AACTC,EAAAA,KAAK,EAAE;AAAA,WAAOC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,KAA6C;AACvDC,MAAAA,MAAM,EAAE,MAD+C;AAEvDC,MAAAA,SAAS,EAAE;AAF4C,KAApD;AAAA,GADE;AAMTC,EAAAA,SAAS,EAAE;AACPC,IAAAA,eADO,2BACSR,KADT,EACgBS,OADhB,EACwB;AAC3BN,MAAAA,cAAc,CAACO,OAAf,CAAuB,MAAvB,EAA8BT,IAAI,CAACU,SAAL,CAAeF,OAAf,CAA9B;AACAT,MAAAA,KAAK,CAACK,MAAN,GAAeI,OAAO,CAACJ,MAAvB;AACAL,MAAAA,KAAK,CAACM,SAAN,GAAkBG,OAAO,CAACH,SAA1B;AACH;AALM,GANF;AAcTM,EAAAA,OAAO,EAAE;AACCC,IAAAA,eADD,wCACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnBC,gBAAAA,MAAmB,QAAnBA,MAAmB;AAATL,gBAAAA,OAAS,SAATA,OAAS;AAAA;AAAA,uBAChCX,OAAO,CAAC;AACViB,kBAAAA,GAAG,EAAE,EADK;AAEVC,kBAAAA,MAAM,EAAE,MAFE;AAGVC,kBAAAA,IAAI,EAAER;AAHI,iBAAD,CADyB;;AAAA;AAMtCK,gBAAAA,MAAM,CAAC,iBAAD,EAAoB;AAACL,kBAAAA,OAAO,EAAPA;AAAD,iBAApB,CAAN;AACAZ,gBAAAA,MAAM,CAACqB,IAAP,CAAYT,OAAO,CAACU,IAApB;;AAPsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQzC,KATI;AAULC,IAAAA,YAVK,+BAUoBH,IAVpB,EAUyB;AAAA,UAAfH,MAAe,SAAfA,MAAe;AAC1BA,MAAAA,MAAM,CAAC,iBAAD,EAAoBG,IAApB,CAAN;AACH;AAZI;AAdA,CAAb;AA+BA,eAAelB,IAAf","sourcesContent":["\nimport router from '../../router';\nimport request from '@/utils/request'\n\n\nconst auth = {\n    state: () => (JSON.parse(sessionStorage.getItem(\"auth\"))|| {\n        userId: 'test',\n        userToken: '',\n    }),\n\n    mutations: {\n        saveUserMessage(state, payload){\n            sessionStorage.setItem(\"auth\",JSON.stringify(payload));\n            state.userId = payload.userId\n            state.userToken = payload.userToken\n        },\n    },\n  \n    actions: {\n        async justLoginSystem({commit}, {payload}){\n            await request({\n                url: \"\",\n                method: \"POST\",\n                data: payload\n            });\n            commit('saveUserMessage', {payload});\n            router.push(payload.path);\n        },\n        saveUserInfo({ commit }, data){\n            commit('saveUserMessage', data)\n        }\n    }\n}\n\n\nexport default auth;"]}]}